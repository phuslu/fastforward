global:
  log_level: info
  log_backups: 2
  log_maxsize: 1073741824
  log_localtime: true
  max_idle_conns: 100
  dial_timeout: 30
  dns_cache_duration: 15m
  dns_cache_size: 524288
  dns_server: https://1.1.1.1/dns-query
dialer:
  wireguard: local://wg0
  torsocks: socks5h://127.0.0.1:9050
  proxy1: https://user:passwd@proxy1.example.org:443/?user_agent=liner-1984
  proxy2: http2://foobar:123456@proxy2.example.com:443/?user_agent=liner-1984&max_clients=8
  proxy3: http3://foobar:123456@proxy3.example.com:443/?user_agent=liner-1984
  wss: wss://phuslu:123456@www.phus.lu:443/
  ssh: ssh://phuslu:123456@phus.lu:22/?timeout=8&max_clients=4&key=/home/phuslu/.ssh/id_rsa
https:
  - listen: [':443']
    server_name: ['example.org']
    server_config:
      example.org:
        keyfile: example_org.pem
    web:
      - location: /
        index: /var/www/example.org
  - listen: [':443']
    server_name: ['ip.example.org']
    server_config:
      example_org.pem:
        keyfile: example_org.pem
    web:
      - location: /
        index:
          headers: |
            content-type: application/json;charset=utf-8
          body: |
            {{with (default (host .Request.RemoteAddr) .Request.URL.RawQuery)}}
            {
              "ip":"{{dnsResolve .}}",
              "geosite": "{{geosite .}}",
              "geoip": {{toJson (geoip .)}}
            }
            {{end}}
      - location: /jsonp
        index:
          headers: |
            content-type: application/json;charset=utf-8
          body: |
            {{ .Request.URL.Query.Get "callback" -}}({{ (fetch .Request.UserAgent 10 (default 0 (int (.Request.URL.Query.Get "ttl"))) (.Request.URL.Query.Get "url")).Body }})
  - listen: [':443']
    server_name: ['demo.example.org']
    server_config:
      demo.example.org:
        keyfile: /path/to/demo.example.org.key
        certfile: /path/to/fullchain.cer
        prefer_chacha20: true
    forward:
      prefer_ipv6: false
      policy: |
        {{if regexMatch `^(153.3.130.101|153.3.130.102):` .Request.RemoteAddr}}
          bypass_auth
        {{else if contains " YaBrowser/" .Request.UserAgent}}
          bypass_auth
        {{else if infile (domain .Request.Host) "domainblacklist.txt"}}
          reject
        {{else if .Request.Header.Get "proxy-authorization"}}
          verify_auth
        {{else if all (.Request.ProtoAtLeast 2 0) (eq .Request.TLS.Version 0x0304) (greased .ClientHelloInfo)}}
          require_proxy_auth
        {{else if contains " Chrome/68.0.3440" .Request.UserAgent}}
          require_proxy_auth
        {{else}}
          proxy_pass
        {{end}}
      tcp_congestion: |
        {{if eq "CN" (geoip .Request.RemoteAddr).Country}}brutal 5242880 16{{end}}
      dialer: |
        {{if hasSuffix ".onion" .Request.Host}}torsocks{{end}}
      auth_table: authuser.csv
      deny_domains_table: deny_domains.csv
      speed_limit: 10000000
    web:
      - location: /dns-query
        proxy:
          pass: https://1.1.1.1
          set_headers: "Host: 1.1.1.1"
      - location: /china.pac
        index:
          file: /home/phuslu/liner/china.pac
      - location: /
        proxy:
          pass: 'http://127.0.0.1:80'
  - listen: [':443']
    server_name: ['fly.example.org']
    prefer_chacha20: true
    forward:
      policy: |
        {{if regexMatch `^(git|curl|node|yarn|Go-http-client|Docker-Client|Homebrew)/` .Request.UserAgent}}
            bypass_auth
        {{else}}
            proxy_pass
        {{end}}
http:
  - listen: [':123']
    server_name: ['127.0.0.1', '192.168.50.7']
    forward:
      policy: |
        {{if regexMatch `^192\.168\.` .Request.RemoteAddr}}
          bypass_auth
        {{else if regexMatch `\.google|ggpht\.com|gstatic\.com|github` .Request.Host}}
          bypass_auth
        {{else if contains " YaBrowser/" .Request.UserAgent}}
          bypass_auth
        {{else if infile (domain .Request.Host) "domainblacklist.txt"}}
          reject
        {{else if .Request.Header.Get "proxy-authorization"}}
          verify_auth
        {{else if hasPrefix "Mozilla/" .Request.UserAgent}}
          require_proxy_auth
        {{else}}
          bypass_auth
        {{end}}
      auth_table: authuser.csv
      dialer: |
        {{if hasPrefix "scholar.google.com" .Request.Host}}
          proxy1
        {{else if eq "openai" (geosite .Request.Host)}}
          proxy1
        {{else if ne "CN" (geoip .Request.Host).Country}}
          proxy2
        {{end}}
    web:
      - location: /
        index:
          root: 'C:/Users/phuslu/Desktop'
socks:
  - listen: [':1081']
    forward:
      policy: |
        {{if not (regexMatch `^(149\.154\.|91\.108\.)` .Request.Host)}}
          reject
        {{end}}
      auth_table: authuser.csv
      deny_domains:
        - facebook.com
        - nytimes.com
  - listen: [':1082']
    forward:
      policy: |
        {{if eq "Nanjing" (geoip .Request.RemoteAddr).City}}
          bypass_auth
        {{else if not .Request.Host}}
          bypass_auth
        {{else if regexMatch `^(149|91)\.` .Request.Host}}
          bypass_auth
        {{else}}
          reject
        {{end}}
stream:
  - listen: [':853']
    keyfile: certs/example.org+rsa
    proxy_pass: tcp4://1.1.1.1:53
  - listen: [':2375']
    proxy_pass: unix:///var/run/docker.sock
  - listen: [':443']
    proxy_pass: github.com:443
    dialer: proxy1
tunnel:
  - dial_timeout: 5
    local_addr: 10.0.0.2:2222
    remote_addr: 192.168.50.1:2222
    ssh: {'host': 'phuslu.ddns.net', 'port': 22, 'user': 'admin', 'key': '@/root/.ssh/id_rsa'}
